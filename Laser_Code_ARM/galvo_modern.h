#ifndef GALVO_MODERN_H
#define GALVO_MODERN_H


/*
'Galvo Modern.ttf'
Rutger Semp 2k18

Version 1.2

Changelog:
16-02-18	v1.0
Original creation

20-02-18	v1.1
Changed to single matrix ASCII format
Added space character

26-2-18		v1.2
Corrected the array according to compilable C-syntax. Formatted for readability - Kai Harten
*/

// 26 letters + 10 numbers + 5 (special) characters 
#define N_CHARACTERS		41

#define MAX_PATTERN_N		7
#define START_PATTERN_INDEX	2

#include <stdint.h>

static int characterSet[N_CHARACTERS][START_PATTERN_INDEX + (MAX_PATTERN_N * 2)] =
{
//  { asci,	pat_n,	x0,	y0,		x1, y1,		x2,	y2,		x3,	y3,		x4,	y4,		x5,	y5,		x6,	y6,	}

	// NUMBERS
	{ 0x30,	6,		1,	1,		-1,	1,		-1,	-1,		1,	-1,		1,	1,		-1, -1				}, // _0
	{ 0x31,	5,		-1,	0,		0,	1,		0,	-1,		-1,	-1,		1,	-1							}, // _1
	{ 0x32,	6,		-1,	1,		1,	1,		1,	0,		-1,	0,		-1,	-1,		1,	-1				}, // _2
	{ 0x33,	7,		-1,	1,		1,	1,		1,	0,		0,	0,		1,	0,		1,	-1,		-1,	-1	}, // _3
	{ 0x34,	5,		-1,	1,		-1,	0,		1,	0,		1,	1,		1,	-1							}, // _4
	{ 0x35,	6,		1,	1,		-1,	1,		-1,	0,		1,	0,		1,	-1,		-1,	-1				}, // _5
	{ 0x36,	6,		1,	1,		-1,	1,		-1,	-1,		1,	-1,		1,	0,		-1,	0				}, // _6
	{ 0x37,	3,		-1,	1,		1,	1,		-1,	-1													}, // _7
	{ 0x38,	7,		1,	0,		1,	-1,		-1,	-1,		-1,	1,		1,	1,		1,	0,		-1,	0	}, // _8
	{ 0x39,	6,		-1,-1,		1,	-1,		1,	1,		-1,	1,		-1,	0,		1,	0				}, // _9

	// LETTERS
	{ 0x20,	1,		0,	0 }, // space
	{ 0x41,	6,		-1,	-1,		-1,	1,		1,	1,		1,	-1,		1,	0,		-1,	0				}, // _A
	{ 0x42,	7,		1,	0,		0,	1,		-1,	1,		-1,	-1,		0,	-1,		1,	0,		-1,	0	}, // _B
	{ 0x43,	4,		1,	-1,		-1,-1,		-1,	1,		1,	1										}, // _C
	{ 0x44,	6,		1,	0,		0,	1,		-1,	1,		-1,	-1,		0,	-1,		1,	0				}, // _D
	{ 0x45,	7,		1,	1,		-1,	1,		-1,	0,		0,	0,		-1,	0,		-1,	-1,		1,	-1	}, // _E
	{ 0x46,	5,		1,	1,		-1,	1,		-1,	-1,		-1,	0,		0,	0							}, // _F
	{ 0x47,	6,		1,	0,		1,	1,		-1,	1,		-1,	-1,		1,	-1,		0,	0				}, // _G
	{ 0x48,	6,		-1,	1,		-1,	-1,		-1,	0,		1,	0,		1,	1,		1,	-1				}, // _H
	{ 0x49,	6,		-1,	1,		1,	1,		0,	1,		0,	-1,		1,	-1,		-1,	-1				}, // _I
	{ 0x4A,	5,		-1,	0,		0,	-1,		1,	-1,		1,	1,		-1,	1							}, // _J
	{ 0x4B,	6,		1,	1,		-1,	0,		-1,	1,		-1,	-1,		-1,	0,		1,	-1				}, // _K
	{ 0x4C,	3,		-1,	1,		-1,	-1,		1,	-1													}, // _L
	{ 0x4D,	5,		-1,	-1,		-1,	1,		0,	0,		1,	1,		1,	-1							}, // _M
	{ 0x4E,	4,		-1,	-1,		-1,	1,		1,	-1,		1,	1										}, // _N
	{ 0x4F,	5,		-1,	0,		0,	1,		1,	0,		0,	-1,		-1,	0							}, // _O
	{ 0x50,	5,		-1,	-1,		-1,	1,		1,	1,		0,	0,		-1,	0							}, // _P
	{ 0x51,	7,		1,	-1,		0,	0,		1,	0,		0,	1,		-1,	0,		0,	-1,		1,	0	}, // _Q
	{ 0x52,	6,		1,	-1,		-1,	0,		1,	0,		0,	1,		-1,	1,		-1,	-1				}, // _R
	{ 0x53,	7,		-1,	-1,		1,	-1,		0,	0,		-1,	0,		-1,	1,		0,	1,		1,	0	}, // _S
	{ 0x54,	4,		-1,	1,		1,	1,		0,	1,		0,	-1										}, // _T
	{ 0x55,	4,		-1,	1,		-1,	-1,		1,	-1,		1,	1										}, // _U
	{ 0x56,	3,		-1,	1,		0,	-1,		1,	1													}, // _F
	{ 0x57,	5,		-1,	1,		-1,	-1,		0,	0,		1,	-1,		1,	1							}, // _W
	{ 0x58,	5,		-1,	1		,1,	-1,		0,	0,		-1,	-1,		1,	1							}, // _X
	{ 0x59,	4,		-1,	-1,		1,	1,		0,	0,		-1,	1										}, // _Y
	{ 0x5A,	4,		-1,	1,		1,	1,		-1,	-1,		1,	-1										}, // _Z

	// SPECIAL CHARACTERS
	{ 0x10,	5,		0,	-1,		0,	1,		-1,	0,		1,	0,		0,	1							}, // _arrowUp ^
	{ 0x11,	5,		0,	1,		0,	-1,		1,	0,		-1,	0,		0,	-1							}, // _arrowDown v
	{ 0x12,	5,		1,	0,		-1,	0,		0,	1,		0,	-1,		-1,	0							}, // _arrowLeft <
	{ 0x13,	5,		-1,	0,		1,	0,		0,	1,		0,	-1,		1,	0							}, // _arrowRight >	
};

// struct pattern
// {
// 	int
// };

int getPattern(char character, int* pattern, int mirror);

#endif
